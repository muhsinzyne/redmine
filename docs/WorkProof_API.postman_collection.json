{
  "info": {
    "name": "WorkProof API - Redmine",
    "_postman_id": "workproof-api-collection",
    "description": "Complete API collection for Redmine WorkProof Plugin\n\nBase URL: https://track.gocomart.com\n\nAuthentication: Use X-Redmine-API-Key header with your API key\n\nGet API Key: Login to Redmine \u2192 My Account \u2192 API access key \u2192 Show",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "key": "value",
        "value": "{{API_KEY}}",
        "type": "string"
      },
      {
        "key": "key",
        "value": "X-Redmine-API-Key",
        "type": "string"
      },
      {
        "key": "in",
        "value": "header",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "Work Proofs",
      "item": [
        {
          "name": "List All Work Proofs",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/projects/{{PROJECT_ID}}/work_proofs.json",
              "host": [
                "{{BASE_URL}}"
              ],
              "path": [
                "projects",
                "{{PROJECT_ID}}",
                "work_proofs.json"
              ]
            },
            "description": "Get all work proofs for a project.\n\nPermission required: view_work_proof or view_self_work_proof"
          },
          "response": []
        },
        {
          "name": "List Work Proofs (Today)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/projects/{{PROJECT_ID}}/work_proofs.json?date={{TODAY}}",
              "host": [
                "{{BASE_URL}}"
              ],
              "path": [
                "projects",
                "{{PROJECT_ID}}",
                "work_proofs.json"
              ],
              "query": [
                {
                  "key": "date",
                  "value": "{{TODAY}}",
                  "description": "Filter by specific date (YYYY-MM-DD)"
                }
              ]
            },
            "description": "Get work proofs for today"
          },
          "response": []
        },
        {
          "name": "List Work Proofs (By User)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/projects/{{PROJECT_ID}}/work_proofs.json?user_id={{USER_ID}}",
              "host": [
                "{{BASE_URL}}"
              ],
              "path": [
                "projects",
                "{{PROJECT_ID}}",
                "work_proofs.json"
              ],
              "query": [
                {
                  "key": "user_id",
                  "value": "{{USER_ID}}",
                  "description": "Filter by user ID"
                }
              ]
            },
            "description": "Get work proofs for a specific user.\n\nRequires view_work_proof permission (managers/admins)"
          },
          "response": []
        },
        {
          "name": "List Work Proofs (Date Range)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/projects/{{PROJECT_ID}}/work_proofs.json?start_date=2025-10-01&end_date=2025-10-31",
              "host": [
                "{{BASE_URL}}"
              ],
              "path": [
                "projects",
                "{{PROJECT_ID}}",
                "work_proofs.json"
              ],
              "query": [
                {
                  "key": "start_date",
                  "value": "2025-10-01",
                  "description": "Start date (YYYY-MM-DD)"
                },
                {
                  "key": "end_date",
                  "value": "2025-10-31",
                  "description": "End date (YYYY-MM-DD)"
                }
              ]
            },
            "description": "Get work proofs within a date range"
          },
          "response": []
        },
        {
          "name": "List Work Proofs (Paginated)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/projects/{{PROJECT_ID}}/work_proofs.json?limit=10&offset=0",
              "host": [
                "{{BASE_URL}}"
              ],
              "path": [
                "projects",
                "{{PROJECT_ID}}",
                "work_proofs.json"
              ],
              "query": [
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Number of results per page (default: 25)"
                },
                {
                  "key": "offset",
                  "value": "0",
                  "description": "Offset for pagination (default: 0)"
                }
              ]
            },
            "description": "Get paginated work proofs"
          },
          "response": []
        },
        {
          "name": "Get Single Work Proof",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/projects/{{PROJECT_ID}}/work_proofs/{{WORK_PROOF_ID}}.json",
              "host": [
                "{{BASE_URL}}"
              ],
              "path": [
                "projects",
                "{{PROJECT_ID}}",
                "work_proofs",
                "{{WORK_PROOF_ID}}.json"
              ]
            },
            "description": "Get details of a specific work proof by ID"
          },
          "response": []
        },
        {
          "name": "Create Work Proof",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"work_proof\": {\n    \"issue_id\": 1,\n    \"date\": \"2025-10-29\",\n    \"image_url\": \"https://example.com/work-proof-image.jpg\",\n    \"description\": \"Completed feature implementation\",\n    \"work_hours\": 4.5,\n    \"status\": \"completed\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{BASE_URL}}/projects/{{PROJECT_ID}}/work_proofs.json",
              "host": [
                "{{BASE_URL}}"
              ],
              "path": [
                "projects",
                "{{PROJECT_ID}}",
                "work_proofs.json"
              ]
            },
            "description": "Create a new work proof.\n\nRequired fields:\n- issue_id\n- date (YYYY-MM-DD)\n- image_url\n\nOptional fields:\n- description\n- work_hours\n- status\n\nPermission required: manage_work_proof"
          },
          "response": []
        },
        {
          "name": "Create Work Proof (with Image Upload)",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "image",
                  "type": "file",
                  "src": "",
                  "description": "Image file (screenshot/photo)"
                },
                {
                  "key": "project_id",
                  "value": "{{PROJECT_ID}}",
                  "type": "text"
                },
                {
                  "key": "issue_id",
                  "value": "{{ISSUE_ID}}",
                  "type": "text"
                },
                {
                  "key": "date",
                  "value": "{{TODAY}}",
                  "type": "text",
                  "description": "YYYY-MM-DD format"
                },
                {
                  "key": "activity_id",
                  "value": "9",
                  "type": "text",
                  "description": "TimeEntry activity (9=Development, 8=Design, etc.)"
                },
                {
                  "key": "description",
                  "value": "Work completed with image",
                  "type": "text"
                },
                {
                  "key": "work_hours",
                  "value": "0.17",
                  "type": "text",
                  "description": "Incremental hours since last screenshot (e.g., 0.17 = ~10 minutes)"
                }
              ]
            },
            "url": {
              "raw": "{{BASE_URL}}/projects/{{PROJECT_ID}}/work_proofs.json",
              "host": [
                "{{BASE_URL}}"
              ],
              "path": [
                "projects",
                "{{PROJECT_ID}}",
                "work_proofs.json"
              ]
            },
            "description": "Create a work proof with image file upload.\n\nThis endpoint accepts multipart/form-data with actual image file.\n\nThe image will be uploaded to Google Cloud Storage (or local storage as fallback).\n\nwork_hours: Incremental hours since last screenshot (mobile app calculates this)\nactivity_id: Required for time_entry consolidation\n\nPermission required: manage_work_proof"
          },
          "response": []
        },
        {
          "name": "Update Work Proof",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"work_proof\": {\n    \"description\": \"Updated description\",\n    \"work_hours\": 5.0,\n    \"status\": \"reviewed\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{BASE_URL}}/projects/{{PROJECT_ID}}/work_proofs/{{WORK_PROOF_ID}}.json",
              "host": [
                "{{BASE_URL}}"
              ],
              "path": [
                "projects",
                "{{PROJECT_ID}}",
                "work_proofs",
                "{{WORK_PROOF_ID}}.json"
              ]
            },
            "description": "Update an existing work proof.\n\nYou can update any field except:\n- id\n- project_id\n- user_id\n\nPermission required: manage_work_proof"
          },
          "response": []
        },
        {
          "name": "Delete Work Proof",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/projects/{{PROJECT_ID}}/work_proofs/{{WORK_PROOF_ID}}.json",
              "host": [
                "{{BASE_URL}}"
              ],
              "path": [
                "projects",
                "{{PROJECT_ID}}",
                "work_proofs",
                "{{WORK_PROOF_ID}}.json"
              ]
            },
            "description": "Delete a work proof.\n\nPermission required: manage_work_proof or admin"
          },
          "response": []
        },
        {
          "name": "Consolidate Work Proofs by Issue",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"issue_id\": {{ISSUE_ID}},\n  \"date\": \"{{TODAY}}\"\n}"
            },
            "url": {
              "raw": "{{BASE_URL}}/projects/{{PROJECT_ID}}/work_proofs/consolidate_by_issue.json",
              "host": [
                "{{BASE_URL}}"
              ],
              "path": [
                "projects",
                "{{PROJECT_ID}}",
                "work_proofs",
                "consolidate_by_issue.json"
              ]
            },
            "description": "Consolidate all pending work proofs for an issue to a single time_entry.\n\nCalculates total hours by summing work_hours from all screenshots.\n\nParameters:\n- issue_id (required): Issue to consolidate\n- date (optional): Date to consolidate (defaults to today)\n- user_id (optional): Defaults to current user\n\nExample:\n- 5 work_proofs with work_hours: 0.0, 0.17, 0.15, 0.20, 0.18\n- Total: SUM = 0.70 hours\n- Creates TimeEntry with 0.70 hours\n\nPermission required: view_self_work_proof (for own work) or view_work_proof (for all)"
          },
          "response": []
        }
      ],
      "description": "WorkProof API endpoints for managing work proofs"
    },
    {
      "name": "Redmine Standard APIs",
      "item": [
        {
          "name": "Get Projects",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/projects.json",
              "host": [
                "{{BASE_URL}}"
              ],
              "path": [
                "projects.json"
              ]
            },
            "description": "Get list of all projects the user has access to"
          },
          "response": []
        },
        {
          "name": "Get Project Details",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/projects/{{PROJECT_ID}}.json",
              "host": [
                "{{BASE_URL}}"
              ],
              "path": [
                "projects",
                "{{PROJECT_ID}}.json"
              ]
            },
            "description": "Get details of a specific project"
          },
          "response": []
        },
        {
          "name": "Get Issues",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/projects/{{PROJECT_ID}}/issues.json",
              "host": [
                "{{BASE_URL}}"
              ],
              "path": [
                "projects",
                "{{PROJECT_ID}}",
                "issues.json"
              ]
            },
            "description": "Get all issues for a project"
          },
          "response": []
        },
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/users/current.json",
              "host": [
                "{{BASE_URL}}"
              ],
              "path": [
                "users",
                "current.json"
              ]
            },
            "description": "Get information about the authenticated user"
          },
          "response": []
        },
        {
          "name": "Get Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/users.json",
              "host": [
                "{{BASE_URL}}"
              ],
              "path": [
                "users.json"
              ]
            },
            "description": "Get list of users (requires admin permission)"
          },
          "response": []
        }
      ],
      "description": "Standard Redmine API endpoints that may be useful for your mobile app"
    },
    {
      "name": "Time Clockings (Premium - No Screenshots)",
      "item": [
        {
          "name": "List All Time Clockings",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/projects/{{PROJECT_ID}}/time_clockings.json",
              "host": [
                "{{BASE_URL}}"
              ],
              "path": [
                "projects",
                "{{PROJECT_ID}}",
                "time_clockings.json"
              ]
            },
            "description": "Get all time clockings for a project.\n\nNo screenshots required - for premium/trusted users.\n\nPermission required: view_work_proof or view_self_work_proof"
          },
          "response": []
        },
        {
          "name": "Create Time Clocking",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"issue_id\": {{ISSUE_ID}},\n  \"activity_id\": 9,\n  \"time_hours\": 0.17,\n  \"description\": \"Working on task\"\n}"
            },
            "url": {
              "raw": "{{BASE_URL}}/projects/{{PROJECT_ID}}/time_clockings.json",
              "host": [
                "{{BASE_URL}}"
              ],
              "path": [
                "projects",
                "{{PROJECT_ID}}",
                "time_clockings.json"
              ]
            },
            "description": "Create a time clocking entry (NO screenshot required).\n\nFor premium/trusted users who track time without screenshots.\n\nParameters:\n- issue_id: Issue being worked on\n- activity_id: TimeEntry activity (9=Development)\n- time_hours: Incremental hours since last clocking\n- description: Optional note\n\nExample workflow:\n1. First entry: time_hours: 0.0\n2. After 10 min: time_hours: 0.17\n3. After 11 min: time_hours: 0.18\n\nTotal = SUM of all time_hours\n\nPermission required: manage_work_proof"
          },
          "response": []
        },
        {
          "name": "Get Time Clocking",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/projects/{{PROJECT_ID}}/time_clockings/{{TIME_CLOCKING_ID}}.json",
              "host": [
                "{{BASE_URL}}"
              ],
              "path": [
                "projects",
                "{{PROJECT_ID}}",
                "time_clockings",
                "{{TIME_CLOCKING_ID}}.json"
              ]
            },
            "description": "Get a single time clocking by ID."
          },
          "response": []
        },
        {
          "name": "Update Time Clocking",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"time_clocking\": {\n    \"time_hours\": 0.25,\n    \"description\": \"Updated description\"\n  }\n}"
            },
            "url": {
              "raw": "{{BASE_URL}}/projects/{{PROJECT_ID}}/time_clockings/{{TIME_CLOCKING_ID}}.json",
              "host": [
                "{{BASE_URL}}"
              ],
              "path": [
                "projects",
                "{{PROJECT_ID}}",
                "time_clockings",
                "{{TIME_CLOCKING_ID}}.json"
              ]
            },
            "description": "Update an existing time clocking."
          },
          "response": []
        },
        {
          "name": "Delete Time Clocking",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/projects/{{PROJECT_ID}}/time_clockings/{{TIME_CLOCKING_ID}}.json",
              "host": [
                "{{BASE_URL}}"
              ],
              "path": [
                "projects",
                "{{PROJECT_ID}}",
                "time_clockings",
                "{{TIME_CLOCKING_ID}}.json"
              ]
            },
            "description": "Delete a time clocking."
          },
          "response": []
        },
        {
          "name": "Consolidate Time Clockings by Issue",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"issue_id\": {{ISSUE_ID}},\n  \"date\": \"{{TODAY}}\"\n}"
            },
            "url": {
              "raw": "{{BASE_URL}}/projects/{{PROJECT_ID}}/time_clockings/consolidate_by_issue.json",
              "host": [
                "{{BASE_URL}}"
              ],
              "path": [
                "projects",
                "{{PROJECT_ID}}",
                "time_clockings",
                "consolidate_by_issue.json"
              ]
            },
            "description": "Consolidate all pending time clockings for an issue to a single time_entry.\n\nCalculates total hours by summing time_hours from all entries.\n\nExample:\n- 5 time clockings with time_hours: 0.0, 0.17, 0.15, 0.20, 0.18\n- Total: SUM = 0.70 hours\n- Creates TimeEntry with 0.70 hours\n\nPermission required: view_self_work_proof (for own time) or view_work_proof (for all)"
          },
          "response": []
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "BASE_URL",
      "value": "https://track.gocomart.com",
      "type": "string"
    },
    {
      "key": "API_KEY",
      "value": "your-api-key-here",
      "type": "string",
      "description": "Get from: My Account \u2192 API access key"
    },
    {
      "key": "PROJECT_ID",
      "value": "1",
      "type": "string",
      "description": "Project ID to test with"
    },
    {
      "key": "USER_ID",
      "value": "1",
      "type": "string",
      "description": "User ID for filtering"
    },
    {
      "key": "WORK_PROOF_ID",
      "value": "1",
      "type": "string",
      "description": "Work Proof ID for show/update/delete"
    },
    {
      "key": "TODAY",
      "value": "2025-10-29",
      "type": "string",
      "description": "Today's date (YYYY-MM-DD)"
    }
  ]
}